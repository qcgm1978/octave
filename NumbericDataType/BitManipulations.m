assert(bitset (1, 3),5)fail('bitset (1, 3:5)')assert(bitset ([15, 14], 1, [0, 1]),[14  , 15])assert(dec2base(100,2),"1100100")assert(bitget (100, 7:-1:1),logical([    1,1,0,0,1,0,0]))assert(bitget (100, 8:-1:1),logical([0,1,1,0,0,1,0,0]))#If at least one argument is a scalar and one an array, then the scalar argument is duplicatedassert(bitget (100, 8:-1:1),bitget (100 * ones (1, 8), 8:-1:1))#Return the k-bit complement of integers in A.assert(dec2base(7,2,4),"0111")assert(bitcmp (7,4),8)assert(dec2bin (11),"1011")assert(dec2bin(11,6),"001011")assert(dec2bin (bitcmp (11, 6)),"110100")#Return a k bit shift of n-digit unsigned integers in a.assert(bitshift (eye (3), 1),[2   0   0   0   2   0   0   0   2]) assert(  dec2bin(10),"1010") assert(bin2dec("10"),2)  assert(bin2dec("101"),5)   assert(bin2dec("10100"),20)    assert(bin2dec("101000"),40)   assert(bitshift (10, [-2, -1, 0, 1, 2]),[2,5,10,20,40])  assert(bin2dec("101"),5)    assert(-bin2dec("101"),-5)assert(   bitshift (-10, -1),-5)assert(bitshift (int8 (1), -1),int8(0))assert(-int8(bin2dec("01")),int8(-1))assert(bitshift (int8 (-1), -1),int8(-1))