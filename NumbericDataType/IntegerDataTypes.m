float = rand (2, 2);assert(class(int32(float)(1)),'int32')assert(isinteger(42),false)assert(class(42),'double')x = int8 (1); assert( intmax (),int32(2147483647))assert( flintmax(),9007199254740992)assert( flintmax('single'),single(16777216))fail("int32(5)+int16(10)")#When doing integer division Octave will round the result to the nearest integerassert(int32 (5) ./ int32 (8),int32(1))assert(5 ./ 8,.625)#Integer division with different rounding rules.assert(idivide (int8 ([-3, 3]), int8 (4), "fix"),int8([0,0]))assert(idivide (int8 ([-3, 3]), int8 (4), "round"),int8([-1,1]))assert(idivide (int8 ([-3, 3]), int8 (4), "floor"),int8([-1,0]))assert(idivide (int8 ([-3, 3]), int8 (4), "ceil"),int8([0,1]))