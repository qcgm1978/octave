x=[1, 0; 0, 1] ;y= [1, 0; 2, 3];isequal( x&y,[1&1,0&0;0&2,1&3],and(x,y),eye(2,2),[1,0;0,1])#an element-by-element basis.isequal( x|y,[1|1,0|0;0|2,1|3],or(x,y),[1,0;1,1])a=1 ;b=0;c=0;isequal(a & b++,0)isequal(a & ++c,1)isequal(!x,[!1,!0;!0,!1],[0,1;1,0])function f (a, b, c)  if (nargin > 2 & ischar (c))  endifendfunction#f(1,2)assert(z=1,1)thing = "food";predicate = "good";message = [ "this " , thing , " is " , predicate ];assert(message,'this food is good')foo=1;assert(typeinfo(foo),'scalar')foo='bar';assert(typeinfo(foo),'sq_string')a(:, 2)= 5;assert(a,[1,5])A=ones(3);A (3, :) = [];assert(A,[1,1,1;1,1,1])A  = ones(5);A (:, 1:2:5) = [];assert(A,[1,1;1,1;1,1;1,1;1,1])x=y=z=0;isequal(x,y,z,0)fail('[m,n,p]=[x,y,z]','element number 2 undefined in return list')