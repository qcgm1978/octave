#true is converted to 1, and false to 0, both represented using double precision floating point numbers.logicalNum=true*22 - false/6;assert(class(logicalNum),"double")assert(logicalNum,22)#When indexing with a logical array the result will be a vector containing the values corresponding to true parts of the logical arraydata = [ 1, 2; 3, 4 ];    idx = (data <= 2);    assert(idx,logical([1,1;0,0]))    assert(data(idx),[1;2])##    The non-numeric value NaN cannot be converted and will produce an error.fail("    logical(NaN)")##logical: wrong type argument 'string'fail('logical("a")')##Any nonzero values will be converted to true (1) while zero values will be converted to false (0)assert(logical(10),logical(1))assert(logical(10),true)assert(logical(0),false)##Return a matrix or N-dimensional array whose elements are all logical 1.assert(true([true;true]),true)##assert(true([true;false]),true)##If invoked with a single scalar integer argument, return a square matrix of the specified size.assert(true(2),[true,true;true,true])##If invoked with two or more scalar integer arguments, or a vector of integer values, return an array with given dimensions.assert(true(2,3),[true,true,true;true,true,true])assert(true([2,3]),[true,true,true;true,true,true])