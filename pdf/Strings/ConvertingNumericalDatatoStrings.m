##The returned string may be used to reconstruct the original matrix by using the eval functionmatrix=[ -1/3 + i/7; 1/3 - i/7 ];matrixStr="[-0.3333+0.14i;0.3333-0.14i]";assert(mat2str (matrix,[4,2]),matrixStr)##assert(eval(matrixStr),matrix,1e-3)matrix=[ -1/3 +i/7; 1/3 -i/7 ];matrix1=[ -1/3, +i/7; 1/3, -i/7 ];assert(matrix,matrix1)assert(mat2str (matrix1,[4,2]),"[-0.3333+0i 0+0.14i;0.3333+0i -0-0.14i]")assert(mat2str (int16 ([1, -1]), "class"),"int16([1 -1])")#If the argument "class" is given then the class of x is included in the string in such a way that eval will result in the construction of a matrix of the same class.assert(mat2str (logical (eye (2))),"[true false;false true]")isequal (x, eval (mat2str (x)));assert(num2str (123.456),"123.456")assert(num2str (123.456, 4),"123.5")#The optional second argument may either give the number of significant digits (pre- cision) to be used in the output or a format template string##assert(s = num2str ([1, 1.34; 3, 3.56], "%5.1f"),'["1.0","1.3";"3.0","3.6"]');assert(num2str (1.234 + 27.3i),"1.234+27.3i")assert(int2str (123),"123")s = int2str ([1, 2, 3; 4, 5, 6]);##assert(s,["1"," 2", "3"; "4", "5", "6"])