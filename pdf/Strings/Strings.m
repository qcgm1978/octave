##A string constant consists of a sequence of characters enclosed in either double-quote or single-quote marksassert("parrot",    'parrot')##Strings can be concatenated using the notation for defining matricesassert([ "foo" , "bar" , "baz" ],"foobarbaz")assert(double ("\n"),10)assert(double ('\n'),double([92,110]))assert("\\\"",'\"')assert('I can''t escape',"I can't escape")#you may insert a single quote character using two single quote characters in successionassert(is_dq_string(""),"Return true if x is a double-quoted character string.")assert(is_sq_string(''),"Return true if x is a single-quoted character string.")    collection = [ "String #1"; "String #2" ];    assert(size(collection),[rows(collection),length( "String #1")])assert(    ischar(collection),"Return true if x is a character array.")assert(    isstring(collection),false,"Octave does not yet implement string arrays so this function will always return false.")assert(isrow (collection),rows(collection),"Return true if X is a row vector 1xN with non-negative N.")assert(ischar ("my string") && isrow ("my string"))assert([ "these"; "are"; "strings" ],["these""are""strings"])assert([ "these", "are", "strings" ],["thesearestrings"])##string_fill_char ("X");##assert([ "these"; "are"; "strings" ],["theseXX"##"areXXXX"##"strings"])