clcclear all#Vectors are a special case of a matrix where there is only one row (a row vector) or only one column (a column vector).a=[1 2 -3];#Return true if x is a row vector 1xN with non-negative N.isrow(a)iscolumn(a' )isequal(a'  ,a(:))#Return a vector of indices of nonzero elements of a matrixfunction varargout=findMat(mat)  col=mat(:);  for i=1:rows(col)    if(col(i)!=0)    if(nargout>=2)    [currentRow, currentCol]=ind2sub(size(mat),i);    varargout{1}(end+1,1)=currentRow;    varargout{2}(end+1,1)=currentCol;      if(nargout==3)        varargout{3}(end+1,1)=col(i);              endif    else      varargout{1}(end+1,1)=i;    endif  endifendforendfunction#Octave pretends that the columns of a matrix form one long vectoreye2=eye(2);isequal(find(eye2 ),findMat(eye2),[1;4])#If two outputs are requested, find returns the row and column indices of nonzero elements of a matrix[i, j] = find (eye2);[m, n] = find (2 * eye2);[p,q]=findMat(2*eye2);[one, two, value] = find (3 * eye (2));[one1, two1, value1] = findMat (3 * eye (2));isequal(m,i,n,j,p,q,one,two,one1,two1,[1;2])#If three outputs are requested, find also returns a vector containing the nonzero values.isequal(value,value1,[3;3])sz = size (eye2);[i, j, v] = find (eye2);b = sparse (i, j, v, sz(1), sz(2));isequal(typeinfo(b),'sparse matrix')