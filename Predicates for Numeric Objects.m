##abs returns the absolute value of the input if it is a real number, and the length of the input if it is a complex number. function a = abs (x)      if (isreal (x))          a = sign (x) .* x;        elseif (iscomplex (x))          a = sqrt (real(x).^2 + imag(x).^2);        endifendfunctionassert(abs(1),1)assert(abs(-1),1)##assert(abs(complex(2,3)),3.6056)##Return true if x is a numeric object, i.e., an integer, real, or complex array.assert(isnumeric(1),true)assert(isnumeric(complex(1)),true)assert(isnumeric(complex(1,2)),true)##Logical and character arrays are not considered to be numeric.assert(isnumeric(true),false)assert(isnumeric("char"),false)##Return true if x is a logical object.assert(isbool(true),islogical(true))##Objects of class double or single are floating-point objects.assert(isfloat(1.2),isfloat(single(1)))##Return true if x is a non-complex matrix or scalar.assert(isreal(1.),!isreal(complex(1)))assert(isreal([1;2]),isreal([complex(1)]))##Return true if x is a complex-valued numeric object.assert(!iscomplex(1),iscomplex(complex(1)))assert(ismatrix([]),ismatrix(1:3),"Return true if a is a 2-D array, i.e., size (a) returns [M N] with non-negative M and N.")assert(isvector(ones(1,1)),isvector(1)," As a consequence a 1x1 array, or scalar, is also a vector.")assert(isrow(zeros(1,5)),true,"Return true if x is a row vector, i.e., size (x) returns [1 N] with non-negative N.")assert(issquare(zeros(5,5)),true,"Return true if x is a square matrix, i.e., size (x) returns [N N] with non-negative N.")