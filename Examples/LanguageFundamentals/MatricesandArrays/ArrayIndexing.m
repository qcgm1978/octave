clcA = [1 2 3 4; 5 6 7 8; 9 10 11 12; 13 14 15 16];#Indexing with Element Positionse = A(3,2);isequal(e,10)r = A(2,[1 3]);isequal(r,[5,7])# in the first through third row and the second through fourth column isequal(A(1:3,2:4),A(1:3,2:end),[2 3 4;6 7 8; 10 11 12])# the entire third columnisequal(A(:,3),[3;7;11;15])fail('t = [datetime(2018,1:5,1); datetime(2019,1:5,1)]',"'datetime' undefined")#Indexing with a Single Index. This method is known as linear indexingA = [12 36 91; 45 29 48; 33 25 11];Alinear = A(:);isequal(size(Alinear),[size(A)(1)*size(A)(2),1],[rows(A)*columns(A),1],[9,1])e = A(3,2);#position indexelinear = A(6);#linear indexisequal(e,elinear,25)s = sum(A);sumCol=[];for i=1:columns(A)  sumCol(i)=sum(A(:,i));endforisequal(s,sumCol)s = sum(A(:));s1=sum(sum(A));isequal(s,s1)linearidx = sub2ind(size(A),3,2);# convert between original array indices and their linear version. isequal(linearidx,rows(A)*2-(rows(A)-3),6)[row,col] = ind2sub(size(A),6);col1=rdivide(6,size(A)(1));isequal(col,col1,2)row1=rows(A)-mod(6,rows(A));isequal(row,row1,3)#Indexing with Logical ValuesA = [1 2 6; 4 3 6];B = [0 3 7; 3 7 5];ind = A<B;isequal(ind,[0,1,1;0,1,0])Avals = A(ind);isequal(Avals,[2;3;6])# in a column vectorBvals = B(ind);isequal(Bvals,[3;7;7]);fail('str = ["A" "B" missing "D" "E" missing];',"'missing' undefined")fail('ind = ismissing(str)',"'str' undefined")