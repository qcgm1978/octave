debug_on_warning (1)clcclear allA=[1 2;3 4];function detVal=getDet(A)  sizeMat=size(A);  singleTwo=sizeMat(sizeMat==2);  isTwo=all(singleTwo);  notEmpty=!isempty(singleTwo);  if(isTwo&&notEmpty)  detVal=A(1)*A(4)-A(3)*A(2);  else    positive=getTotal(A);    negative=getTotal(flip(A));    detVal=positive-negative;  endif
endfunctionfunction total=getTotal(A)  B=A;  B(4:5,:)=B(1:2,:);  B(:,4)=B(:,1);  total=0;  for i=1:rows(A)    el=B(i);    [row,col]=ind2sub(size(B),i);    try      nextEl=B(row+1,col+1);      thirdEl=B(row+2,col+2);      total+=el*nextEl*thirdEl;      catch(e)    end_try_catch  endforendfunctionfunction bool=hasRow(row,A)  bool=row<=rows(A)endfunction
isequal(det(A),A(1)*A(4)-A(3)*A(2),getDet(A),1*4-2*3)isequal(size(A),[2 2])function diagonal=getDiagonal(mat,isMain=true)  diagonal=[];  len=length(mat);  m=0;  sizeMat=size(mat);  isTwo=all(sizeMat(sizeMat==2));  if(isTwo)  for i=1:rows(mat)    if(isMain)    diagonal(i)=mat(i,i);    else      diagonal(i)=mat(i,end-m);      m++;    endif  endforendifif(!isMain)diagonal=flip(diagonal);endif
endfunctionisequal(getDiagonal(A),[1 4])isequal(getDiagonal(A,false),[3 2])
A(:,3)=[5;6];A(3,:)=[7 8 9];detVal=getDet(A);isequal(detVal,-2)assert(det(A),detVal,1e-14)getInverseNum(2)isequal(getInverseNum([5 4 1 2 3]),7)
