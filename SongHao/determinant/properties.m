clcclear allorders=5;A=B=C=randMat=rand(orders);detMat=det(randMat);assert1(transpose(transpose(randMat)),randMat)assert1(det(transpose(randMat)),detMat)colNum=randi([1,3]);col=randMat(:,colNum);randMat(:,colNum)=randMat(:,orders-colNum);randMat(:,orders-colNum)=col;assert1(detMat,-det(randMat))randMat(:,colNum)=randMat(:,orders-colNum);k=randi(100);detA=det(A);A(:,colNum)=k*A(:,colNum);assert1(det(A),k*detA)B=A*k;assert1(det(B),(k^rows(A))*det(A))A=[1:3;4:6;7:9]';assert1(getDetZeroType(A),'none types of isVecZero, isRatio, isEqualVec')A=[1:3;4:6;0 0 0];assert1(getDetZeroType(A),{'isVecZero'})commonFactor=randi(100);detB=det(B);B(:,colNum)=commonFactor*B(:,colNum);assert1(det(commonFactor*C),commonFactor^orders*det(C))D=rand(orders);D(:,colNum)=D(:,orders-colNum)*k;E=rand(orders);E(:,colNum)=zeros(orders,1);F=[1:3;4:6;7:9];assert1(det(D),det(E),det(randMat),det(F),0)E=rand(orders);detE=det(E);aRand=rand();mat=E;for i=1:orders  offset=aRand*i;  E(i,colNum)=E(i,colNum)+offset;  mat(i,colNum)=offset;  endfordetSum=det(E);col=zeros(orders,1);col(:)=aRand;assert1(detSum,detE+det(mat))A=rand(orders);detA=det(A);mulCol=A(:,colNum)*randi(10);A(:,orders-colNum)+mulCol;assert1(det(A),detA);