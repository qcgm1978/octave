clcclear allA=zeros(3);A(1,:)=2;A(2,:)=3;A(3,:)=1;isequal(det(A),getDet(A),det(transpose(A)),getDet(transpose(A)),0)A(:,4)=7;A(4,:)=5;isequal(det(A),getDet(A),det(transpose(A)),getDet(transpose(A)),0)A(1,1)=8;assert1(det(A),getDet(A),1e-13)k=round(rand()*10)A=[1   2   53   4   67   8   9];isequal(det(A)*k^3,det(k*A))x=rand(2);y=rand(2);function [bool,str]=proveRightDivision(x,y)bool=0;str='';c= fixnum(inv(y'));d=fixnum(inv(y)');if(  isequal  (c,d))isequal(transpose(  d*x),transpose(x)*transpose(d))a=fixnum(transpose(d));b=fixnum(inv(y));if(isequal(a,b))if(isequal(transpose(  d*x),transpose(x)*b))bool=1;str=strcat('transpose(x)*','fixnum(inv(y))');endifendifendif  
endfunctionassert(x/y,(inv(y')*x')',1e-13)
isequal(proveRightDivision(x,y),1)[~,str]=proveRightDivision(x,y);#assert(x/y,eval(str))